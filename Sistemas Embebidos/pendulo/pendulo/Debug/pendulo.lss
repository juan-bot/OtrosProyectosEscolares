
pendulo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000015a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000106  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000015a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000018c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007a2  00000000  00000000  000001f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000690  00000000  00000000  00000996  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003a2  00000000  00000000  00001026  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000013c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000394  00000000  00000000  000013fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000089  00000000  00000000  00001790  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001819  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 4b 00 	call	0x96	; 0x96 <main>
  78:	0c 94 81 00 	jmp	0x102	; 0x102 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <delay_200>:
		delay_200();
		PORTC=0X00;
		delay_200();
    }
}
void delay_200(){
  80:	84 e1       	ldi	r24, 0x14	; 20
  82:	90 e0       	ldi	r25, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  84:	ef e3       	ldi	r30, 0x3F	; 63
  86:	fc e9       	ldi	r31, 0x9C	; 156
  88:	31 97       	sbiw	r30, 0x01	; 1
  8a:	f1 f7       	brne	.-4      	; 0x88 <delay_200+0x8>
  8c:	00 c0       	rjmp	.+0      	; 0x8e <delay_200+0xe>
  8e:	00 00       	nop
  90:	01 97       	sbiw	r24, 0x01	; 1
	int i=0;
	for(i=0;i<20;i++)
  92:	c1 f7       	brne	.-16     	; 0x84 <delay_200+0x4>
		_delay_ms(10);
}
  94:	08 95       	ret

00000096 <main>:

void delay_200();

int main(void)
{
	DDRC=0XFF;
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	87 b9       	out	0x07, r24	; 7
    while (1) 
    {
		PORTC=0X00;
		delay_200();
		PORTC=0X01;
  9a:	ee 24       	eor	r14, r14
  9c:	e3 94       	inc	r14
		delay_200();
		PORTC=0X02;
  9e:	68 94       	set
  a0:	ff 24       	eor	r15, r15
  a2:	f1 f8       	bld	r15, 1
		delay_200();
		PORTC=0X04;
  a4:	04 e0       	ldi	r16, 0x04	; 4
		delay_200();
		PORTC=0X08;
  a6:	18 e0       	ldi	r17, 0x08	; 8
		delay_200();
		PORTC=0X10;
  a8:	d0 e1       	ldi	r29, 0x10	; 16
		delay_200();
		PORTC=0X20;
  aa:	c0 e2       	ldi	r28, 0x20	; 32
int main(void)
{
	DDRC=0XFF;
    while (1) 
    {
		PORTC=0X00;
  ac:	18 b8       	out	0x08, r1	; 8
		delay_200();
  ae:	0e 94 40 00 	call	0x80	; 0x80 <delay_200>
		PORTC=0X01;
  b2:	e8 b8       	out	0x08, r14	; 8
		delay_200();
  b4:	0e 94 40 00 	call	0x80	; 0x80 <delay_200>
		PORTC=0X02;
  b8:	f8 b8       	out	0x08, r15	; 8
		delay_200();
  ba:	0e 94 40 00 	call	0x80	; 0x80 <delay_200>
		PORTC=0X04;
  be:	08 b9       	out	0x08, r16	; 8
		delay_200();
  c0:	0e 94 40 00 	call	0x80	; 0x80 <delay_200>
		PORTC=0X08;
  c4:	18 b9       	out	0x08, r17	; 8
		delay_200();
  c6:	0e 94 40 00 	call	0x80	; 0x80 <delay_200>
		PORTC=0X10;
  ca:	d8 b9       	out	0x08, r29	; 8
		delay_200();
  cc:	0e 94 40 00 	call	0x80	; 0x80 <delay_200>
		PORTC=0X20;
  d0:	c8 b9       	out	0x08, r28	; 8
		delay_200();
  d2:	0e 94 40 00 	call	0x80	; 0x80 <delay_200>
		PORTC=0X20;
  d6:	c8 b9       	out	0x08, r28	; 8
		delay_200();
  d8:	0e 94 40 00 	call	0x80	; 0x80 <delay_200>
		PORTC=0X10;
  dc:	d8 b9       	out	0x08, r29	; 8
		delay_200();
  de:	0e 94 40 00 	call	0x80	; 0x80 <delay_200>
		PORTC=0X08;
  e2:	18 b9       	out	0x08, r17	; 8
		delay_200();
  e4:	0e 94 40 00 	call	0x80	; 0x80 <delay_200>
		PORTC=0X04;
  e8:	08 b9       	out	0x08, r16	; 8
		delay_200();
  ea:	0e 94 40 00 	call	0x80	; 0x80 <delay_200>
		PORTC=0X02;
  ee:	f8 b8       	out	0x08, r15	; 8
		delay_200();
  f0:	0e 94 40 00 	call	0x80	; 0x80 <delay_200>
		PORTC=0X01;
  f4:	e8 b8       	out	0x08, r14	; 8
		delay_200();
  f6:	0e 94 40 00 	call	0x80	; 0x80 <delay_200>
		PORTC=0X00;
  fa:	18 b8       	out	0x08, r1	; 8
		delay_200();
  fc:	0e 94 40 00 	call	0x80	; 0x80 <delay_200>
 100:	d5 cf       	rjmp	.-86     	; 0xac <main+0x16>

00000102 <_exit>:
 102:	f8 94       	cli

00000104 <__stop_program>:
 104:	ff cf       	rjmp	.-2      	; 0x104 <__stop_program>
