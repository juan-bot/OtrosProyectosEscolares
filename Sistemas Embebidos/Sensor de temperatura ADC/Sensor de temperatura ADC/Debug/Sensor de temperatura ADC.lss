
Sensor de temperatura ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000586  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000532  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000586  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005b8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000005f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000086b  00000000  00000000  00000618  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006cd  00000000  00000000  00000e83  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002fc  00000000  00000000  00001550  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000184c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003de  00000000  00000000  00001870  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000010b  00000000  00000000  00001c4e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001d59  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 39 00 	jmp	0x72	; 0x72 <__ctors_end>
   4:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
   8:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
   c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  10:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  14:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  18:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  1c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  20:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  24:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  28:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  2c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  30:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  34:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  38:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  3c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  40:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  44:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  48:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  4c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  50:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  54:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  58:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  5c:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  60:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>
  64:	0c 94 43 00 	jmp	0x86	; 0x86 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	3f 06       	cpc	r3, r31
  6a:	5b 4f       	sbci	r21, 0xFB	; 251
  6c:	66 6d       	ori	r22, 0xD6	; 214
  6e:	7d 07       	cpc	r23, r29
  70:	7f 67       	ori	r23, 0x7F	; 127

00000072 <__ctors_end>:
  72:	11 24       	eor	r1, r1
  74:	1f be       	out	0x3f, r1	; 63
  76:	cf ef       	ldi	r28, 0xFF	; 255
  78:	d8 e0       	ldi	r29, 0x08	; 8
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	cd bf       	out	0x3d, r28	; 61
  7e:	0e 94 45 00 	call	0x8a	; 0x8a <main>
  82:	0c 94 97 02 	jmp	0x52e	; 0x52e <_exit>

00000086 <__bad_interrupt>:
  86:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000008a <main>:
#include <util/delay.h>
#include <avr/io.h>
const uint8_t numero[] PROGMEM ={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x67};
int main(void) { 
	uint16_t temp;
	DDRD = 0xFF;//salida a los displays
  8a:	8f ef       	ldi	r24, 0xFF	; 255
  8c:	8a b9       	out	0x0a, r24	; 10
	DDRC = 0x00 ; // Entrada para el sensor 
  8e:	17 b8       	out	0x07, r1	; 7
	DDRB = 0xFF; // Salida para los actuadores 
  90:	84 b9       	out	0x04, r24	; 4
	//PORTB = 0x00 ; // Inicia con las salidas sin activar
	ADMUX = 0x00 ; // Selecciona ADC0 y Vref en AREF 
  92:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	ADCSRA = 0xC3; // Habilita ADC, inicia conversi´on // y divide entre 8 
  96:	83 ec       	ldi	r24, 0xC3	; 195
  98:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
	DIDR0 = 0x01 ; // Anula el buffer digital en ADC0
  9c:	81 e0       	ldi	r24, 0x01	; 1
  9e:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__DATA_REGION_ORIGIN__+0x1e>
	while(1) {
		while( !(ADCSRA & 1 << ADIF ) ); // Espera fin de conversi´on 
  a2:	ca e7       	ldi	r28, 0x7A	; 122
  a4:	d0 e0       	ldi	r29, 0x00	; 0
		ADCSRA |= 1 << ADIF; // Limpia la bandera ADIF 
		temp = ((ADCW*4.8875)/10); // Obtiene la temperatura 
  a6:	0f 2e       	mov	r0, r31
  a8:	f8 e7       	ldi	r31, 0x78	; 120
  aa:	af 2e       	mov	r10, r31
  ac:	b1 2c       	mov	r11, r1
  ae:	f0 2d       	mov	r31, r0
		PORTD = pgm_read_byte(&numero[temp%10]);
		PORTB=0X06;
  b0:	0f 2e       	mov	r0, r31
  b2:	f6 e0       	ldi	r31, 0x06	; 6
  b4:	8f 2e       	mov	r8, r31
  b6:	f0 2d       	mov	r31, r0
		_delay_ms (5);
		PORTB=0X07;
  b8:	17 e0       	ldi	r17, 0x07	; 7
		PORTD = pgm_read_byte(&numero[(temp%100)/10]);
  ba:	0f 2e       	mov	r0, r31
  bc:	f4 e6       	ldi	r31, 0x64	; 100
  be:	9f 2e       	mov	r9, r31
  c0:	f0 2d       	mov	r31, r0
		PORTB=0X05;
  c2:	05 e0       	ldi	r16, 0x05	; 5
		_delay_ms (5);
		PORTB =0X07;
		PORTD = pgm_read_byte(&numero[temp/100]);
		PORTB=0X03;
  c4:	0f 2e       	mov	r0, r31
  c6:	f3 e0       	ldi	r31, 0x03	; 3
  c8:	7f 2e       	mov	r7, r31
  ca:	f0 2d       	mov	r31, r0
	//PORTB = 0x00 ; // Inicia con las salidas sin activar
	ADMUX = 0x00 ; // Selecciona ADC0 y Vref en AREF 
	ADCSRA = 0xC3; // Habilita ADC, inicia conversi´on // y divide entre 8 
	DIDR0 = 0x01 ; // Anula el buffer digital en ADC0
	while(1) {
		while( !(ADCSRA & 1 << ADIF ) ); // Espera fin de conversi´on 
  cc:	88 81       	ld	r24, Y
  ce:	84 ff       	sbrs	r24, 4
  d0:	fd cf       	rjmp	.-6      	; 0xcc <main+0x42>
		ADCSRA |= 1 << ADIF; // Limpia la bandera ADIF 
  d2:	88 81       	ld	r24, Y
  d4:	80 61       	ori	r24, 0x10	; 16
  d6:	88 83       	st	Y, r24
		temp = ((ADCW*4.8875)/10); // Obtiene la temperatura 
  d8:	f5 01       	movw	r30, r10
  da:	60 81       	ld	r22, Z
  dc:	71 81       	ldd	r23, Z+1	; 0x01
  de:	80 e0       	ldi	r24, 0x00	; 0
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	0e 94 8d 01 	call	0x31a	; 0x31a <__floatunsisf>
  e6:	26 e6       	ldi	r18, 0x66	; 102
  e8:	36 e6       	ldi	r19, 0x66	; 102
  ea:	4c e9       	ldi	r20, 0x9C	; 156
  ec:	50 e4       	ldi	r21, 0x40	; 64
  ee:	0e 94 1b 02 	call	0x436	; 0x436 <__mulsf3>
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	40 e2       	ldi	r20, 0x20	; 32
  f8:	51 e4       	ldi	r21, 0x41	; 65
  fa:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <__divsf3>
  fe:	0e 94 5e 01 	call	0x2bc	; 0x2bc <__fixunssfsi>
 102:	6b 01       	movw	r12, r22
 104:	7c 01       	movw	r14, r24
		PORTD = pgm_read_byte(&numero[temp%10]);
 106:	9b 01       	movw	r18, r22
 108:	ad ec       	ldi	r26, 0xCD	; 205
 10a:	bc ec       	ldi	r27, 0xCC	; 204
 10c:	0e 94 88 02 	call	0x510	; 0x510 <__umulhisi3>
 110:	96 95       	lsr	r25
 112:	87 95       	ror	r24
 114:	96 95       	lsr	r25
 116:	87 95       	ror	r24
 118:	96 95       	lsr	r25
 11a:	87 95       	ror	r24
 11c:	9c 01       	movw	r18, r24
 11e:	22 0f       	add	r18, r18
 120:	33 1f       	adc	r19, r19
 122:	88 0f       	add	r24, r24
 124:	99 1f       	adc	r25, r25
 126:	88 0f       	add	r24, r24
 128:	99 1f       	adc	r25, r25
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	82 0f       	add	r24, r18
 130:	93 1f       	adc	r25, r19
 132:	f6 01       	movw	r30, r12
 134:	e8 1b       	sub	r30, r24
 136:	f9 0b       	sbc	r31, r25
 138:	e8 59       	subi	r30, 0x98	; 152
 13a:	ff 4f       	sbci	r31, 0xFF	; 255
 13c:	e4 91       	lpm	r30, Z
 13e:	eb b9       	out	0x0b, r30	; 11
		PORTB=0X06;
 140:	85 b8       	out	0x05, r8	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 142:	81 ee       	ldi	r24, 0xE1	; 225
 144:	94 e0       	ldi	r25, 0x04	; 4
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <main+0xbc>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <main+0xc2>
 14c:	00 00       	nop
		_delay_ms (5);
		PORTB=0X07;
 14e:	15 b9       	out	0x05, r17	; 5
		PORTD = pgm_read_byte(&numero[(temp%100)/10]);
 150:	a6 01       	movw	r20, r12
 152:	56 95       	lsr	r21
 154:	47 95       	ror	r20
 156:	56 95       	lsr	r21
 158:	47 95       	ror	r20
 15a:	9a 01       	movw	r18, r20
 15c:	ab e7       	ldi	r26, 0x7B	; 123
 15e:	b4 e1       	ldi	r27, 0x14	; 20
 160:	0e 94 88 02 	call	0x510	; 0x510 <__umulhisi3>
 164:	96 95       	lsr	r25
 166:	87 95       	ror	r24
 168:	98 9e       	mul	r9, r24
 16a:	90 01       	movw	r18, r0
 16c:	99 9e       	mul	r9, r25
 16e:	30 0d       	add	r19, r0
 170:	11 24       	eor	r1, r1
 172:	f6 01       	movw	r30, r12
 174:	e2 1b       	sub	r30, r18
 176:	f3 0b       	sbc	r31, r19
 178:	9f 01       	movw	r18, r30
 17a:	ad ec       	ldi	r26, 0xCD	; 205
 17c:	bc ec       	ldi	r27, 0xCC	; 204
 17e:	0e 94 88 02 	call	0x510	; 0x510 <__umulhisi3>
 182:	96 95       	lsr	r25
 184:	87 95       	ror	r24
 186:	96 95       	lsr	r25
 188:	87 95       	ror	r24
 18a:	96 95       	lsr	r25
 18c:	87 95       	ror	r24
 18e:	fc 01       	movw	r30, r24
 190:	e8 59       	subi	r30, 0x98	; 152
 192:	ff 4f       	sbci	r31, 0xFF	; 255
 194:	e4 91       	lpm	r30, Z
 196:	eb b9       	out	0x0b, r30	; 11
		PORTB=0X05;
 198:	05 b9       	out	0x05, r16	; 5
 19a:	81 ee       	ldi	r24, 0xE1	; 225
 19c:	94 e0       	ldi	r25, 0x04	; 4
 19e:	01 97       	sbiw	r24, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <main+0x114>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <main+0x11a>
 1a4:	00 00       	nop
		_delay_ms (5);
		PORTB =0X07;
 1a6:	15 b9       	out	0x05, r17	; 5
		PORTD = pgm_read_byte(&numero[temp/100]);
 1a8:	9a 01       	movw	r18, r20
 1aa:	ab e7       	ldi	r26, 0x7B	; 123
 1ac:	b4 e1       	ldi	r27, 0x14	; 20
 1ae:	0e 94 88 02 	call	0x510	; 0x510 <__umulhisi3>
 1b2:	96 95       	lsr	r25
 1b4:	87 95       	ror	r24
 1b6:	fc 01       	movw	r30, r24
 1b8:	e8 59       	subi	r30, 0x98	; 152
 1ba:	ff 4f       	sbci	r31, 0xFF	; 255
 1bc:	e4 91       	lpm	r30, Z
 1be:	eb b9       	out	0x0b, r30	; 11
		PORTB=0X03;
 1c0:	75 b8       	out	0x05, r7	; 5
 1c2:	e1 ee       	ldi	r30, 0xE1	; 225
 1c4:	f4 e0       	ldi	r31, 0x04	; 4
 1c6:	31 97       	sbiw	r30, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <main+0x13c>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <main+0x142>
 1cc:	00 00       	nop
		_delay_ms (5);
		PORTB=0X07;
 1ce:	15 b9       	out	0x05, r17	; 5
		ADCSRA |= 1 << ADSC; // Inicia nueva conversi´on
 1d0:	88 81       	ld	r24, Y
 1d2:	80 64       	ori	r24, 0x40	; 64
 1d4:	88 83       	st	Y, r24
	}
 1d6:	7a cf       	rjmp	.-268    	; 0xcc <main+0x42>

000001d8 <__divsf3>:
 1d8:	0e 94 00 01 	call	0x200	; 0x200 <__divsf3x>
 1dc:	0c 94 e1 01 	jmp	0x3c2	; 0x3c2 <__fp_round>
 1e0:	0e 94 da 01 	call	0x3b4	; 0x3b4 <__fp_pscB>
 1e4:	58 f0       	brcs	.+22     	; 0x1fc <__divsf3+0x24>
 1e6:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <__fp_pscA>
 1ea:	40 f0       	brcs	.+16     	; 0x1fc <__divsf3+0x24>
 1ec:	29 f4       	brne	.+10     	; 0x1f8 <__divsf3+0x20>
 1ee:	5f 3f       	cpi	r21, 0xFF	; 255
 1f0:	29 f0       	breq	.+10     	; 0x1fc <__divsf3+0x24>
 1f2:	0c 94 ca 01 	jmp	0x394	; 0x394 <__fp_inf>
 1f6:	51 11       	cpse	r21, r1
 1f8:	0c 94 15 02 	jmp	0x42a	; 0x42a <__fp_szero>
 1fc:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__fp_nan>

00000200 <__divsf3x>:
 200:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__fp_split3>
 204:	68 f3       	brcs	.-38     	; 0x1e0 <__divsf3+0x8>

00000206 <__divsf3_pse>:
 206:	99 23       	and	r25, r25
 208:	b1 f3       	breq	.-20     	; 0x1f6 <__divsf3+0x1e>
 20a:	55 23       	and	r21, r21
 20c:	91 f3       	breq	.-28     	; 0x1f2 <__divsf3+0x1a>
 20e:	95 1b       	sub	r25, r21
 210:	55 0b       	sbc	r21, r21
 212:	bb 27       	eor	r27, r27
 214:	aa 27       	eor	r26, r26
 216:	62 17       	cp	r22, r18
 218:	73 07       	cpc	r23, r19
 21a:	84 07       	cpc	r24, r20
 21c:	38 f0       	brcs	.+14     	; 0x22c <__divsf3_pse+0x26>
 21e:	9f 5f       	subi	r25, 0xFF	; 255
 220:	5f 4f       	sbci	r21, 0xFF	; 255
 222:	22 0f       	add	r18, r18
 224:	33 1f       	adc	r19, r19
 226:	44 1f       	adc	r20, r20
 228:	aa 1f       	adc	r26, r26
 22a:	a9 f3       	breq	.-22     	; 0x216 <__divsf3_pse+0x10>
 22c:	35 d0       	rcall	.+106    	; 0x298 <__divsf3_pse+0x92>
 22e:	0e 2e       	mov	r0, r30
 230:	3a f0       	brmi	.+14     	; 0x240 <__divsf3_pse+0x3a>
 232:	e0 e8       	ldi	r30, 0x80	; 128
 234:	32 d0       	rcall	.+100    	; 0x29a <__divsf3_pse+0x94>
 236:	91 50       	subi	r25, 0x01	; 1
 238:	50 40       	sbci	r21, 0x00	; 0
 23a:	e6 95       	lsr	r30
 23c:	00 1c       	adc	r0, r0
 23e:	ca f7       	brpl	.-14     	; 0x232 <__divsf3_pse+0x2c>
 240:	2b d0       	rcall	.+86     	; 0x298 <__divsf3_pse+0x92>
 242:	fe 2f       	mov	r31, r30
 244:	29 d0       	rcall	.+82     	; 0x298 <__divsf3_pse+0x92>
 246:	66 0f       	add	r22, r22
 248:	77 1f       	adc	r23, r23
 24a:	88 1f       	adc	r24, r24
 24c:	bb 1f       	adc	r27, r27
 24e:	26 17       	cp	r18, r22
 250:	37 07       	cpc	r19, r23
 252:	48 07       	cpc	r20, r24
 254:	ab 07       	cpc	r26, r27
 256:	b0 e8       	ldi	r27, 0x80	; 128
 258:	09 f0       	breq	.+2      	; 0x25c <__divsf3_pse+0x56>
 25a:	bb 0b       	sbc	r27, r27
 25c:	80 2d       	mov	r24, r0
 25e:	bf 01       	movw	r22, r30
 260:	ff 27       	eor	r31, r31
 262:	93 58       	subi	r25, 0x83	; 131
 264:	5f 4f       	sbci	r21, 0xFF	; 255
 266:	3a f0       	brmi	.+14     	; 0x276 <__divsf3_pse+0x70>
 268:	9e 3f       	cpi	r25, 0xFE	; 254
 26a:	51 05       	cpc	r21, r1
 26c:	78 f0       	brcs	.+30     	; 0x28c <__divsf3_pse+0x86>
 26e:	0c 94 ca 01 	jmp	0x394	; 0x394 <__fp_inf>
 272:	0c 94 15 02 	jmp	0x42a	; 0x42a <__fp_szero>
 276:	5f 3f       	cpi	r21, 0xFF	; 255
 278:	e4 f3       	brlt	.-8      	; 0x272 <__divsf3_pse+0x6c>
 27a:	98 3e       	cpi	r25, 0xE8	; 232
 27c:	d4 f3       	brlt	.-12     	; 0x272 <__divsf3_pse+0x6c>
 27e:	86 95       	lsr	r24
 280:	77 95       	ror	r23
 282:	67 95       	ror	r22
 284:	b7 95       	ror	r27
 286:	f7 95       	ror	r31
 288:	9f 5f       	subi	r25, 0xFF	; 255
 28a:	c9 f7       	brne	.-14     	; 0x27e <__divsf3_pse+0x78>
 28c:	88 0f       	add	r24, r24
 28e:	91 1d       	adc	r25, r1
 290:	96 95       	lsr	r25
 292:	87 95       	ror	r24
 294:	97 f9       	bld	r25, 7
 296:	08 95       	ret
 298:	e1 e0       	ldi	r30, 0x01	; 1
 29a:	66 0f       	add	r22, r22
 29c:	77 1f       	adc	r23, r23
 29e:	88 1f       	adc	r24, r24
 2a0:	bb 1f       	adc	r27, r27
 2a2:	62 17       	cp	r22, r18
 2a4:	73 07       	cpc	r23, r19
 2a6:	84 07       	cpc	r24, r20
 2a8:	ba 07       	cpc	r27, r26
 2aa:	20 f0       	brcs	.+8      	; 0x2b4 <__divsf3_pse+0xae>
 2ac:	62 1b       	sub	r22, r18
 2ae:	73 0b       	sbc	r23, r19
 2b0:	84 0b       	sbc	r24, r20
 2b2:	ba 0b       	sbc	r27, r26
 2b4:	ee 1f       	adc	r30, r30
 2b6:	88 f7       	brcc	.-30     	; 0x29a <__divsf3_pse+0x94>
 2b8:	e0 95       	com	r30
 2ba:	08 95       	ret

000002bc <__fixunssfsi>:
 2bc:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <__fp_splitA>
 2c0:	88 f0       	brcs	.+34     	; 0x2e4 <__fixunssfsi+0x28>
 2c2:	9f 57       	subi	r25, 0x7F	; 127
 2c4:	98 f0       	brcs	.+38     	; 0x2ec <__fixunssfsi+0x30>
 2c6:	b9 2f       	mov	r27, r25
 2c8:	99 27       	eor	r25, r25
 2ca:	b7 51       	subi	r27, 0x17	; 23
 2cc:	b0 f0       	brcs	.+44     	; 0x2fa <__fixunssfsi+0x3e>
 2ce:	e1 f0       	breq	.+56     	; 0x308 <__fixunssfsi+0x4c>
 2d0:	66 0f       	add	r22, r22
 2d2:	77 1f       	adc	r23, r23
 2d4:	88 1f       	adc	r24, r24
 2d6:	99 1f       	adc	r25, r25
 2d8:	1a f0       	brmi	.+6      	; 0x2e0 <__fixunssfsi+0x24>
 2da:	ba 95       	dec	r27
 2dc:	c9 f7       	brne	.-14     	; 0x2d0 <__fixunssfsi+0x14>
 2de:	14 c0       	rjmp	.+40     	; 0x308 <__fixunssfsi+0x4c>
 2e0:	b1 30       	cpi	r27, 0x01	; 1
 2e2:	91 f0       	breq	.+36     	; 0x308 <__fixunssfsi+0x4c>
 2e4:	0e 94 14 02 	call	0x428	; 0x428 <__fp_zero>
 2e8:	b1 e0       	ldi	r27, 0x01	; 1
 2ea:	08 95       	ret
 2ec:	0c 94 14 02 	jmp	0x428	; 0x428 <__fp_zero>
 2f0:	67 2f       	mov	r22, r23
 2f2:	78 2f       	mov	r23, r24
 2f4:	88 27       	eor	r24, r24
 2f6:	b8 5f       	subi	r27, 0xF8	; 248
 2f8:	39 f0       	breq	.+14     	; 0x308 <__fixunssfsi+0x4c>
 2fa:	b9 3f       	cpi	r27, 0xF9	; 249
 2fc:	cc f3       	brlt	.-14     	; 0x2f0 <__fixunssfsi+0x34>
 2fe:	86 95       	lsr	r24
 300:	77 95       	ror	r23
 302:	67 95       	ror	r22
 304:	b3 95       	inc	r27
 306:	d9 f7       	brne	.-10     	; 0x2fe <__fixunssfsi+0x42>
 308:	3e f4       	brtc	.+14     	; 0x318 <__fixunssfsi+0x5c>
 30a:	90 95       	com	r25
 30c:	80 95       	com	r24
 30e:	70 95       	com	r23
 310:	61 95       	neg	r22
 312:	7f 4f       	sbci	r23, 0xFF	; 255
 314:	8f 4f       	sbci	r24, 0xFF	; 255
 316:	9f 4f       	sbci	r25, 0xFF	; 255
 318:	08 95       	ret

0000031a <__floatunsisf>:
 31a:	e8 94       	clt
 31c:	09 c0       	rjmp	.+18     	; 0x330 <__floatsisf+0x12>

0000031e <__floatsisf>:
 31e:	97 fb       	bst	r25, 7
 320:	3e f4       	brtc	.+14     	; 0x330 <__floatsisf+0x12>
 322:	90 95       	com	r25
 324:	80 95       	com	r24
 326:	70 95       	com	r23
 328:	61 95       	neg	r22
 32a:	7f 4f       	sbci	r23, 0xFF	; 255
 32c:	8f 4f       	sbci	r24, 0xFF	; 255
 32e:	9f 4f       	sbci	r25, 0xFF	; 255
 330:	99 23       	and	r25, r25
 332:	a9 f0       	breq	.+42     	; 0x35e <__floatsisf+0x40>
 334:	f9 2f       	mov	r31, r25
 336:	96 e9       	ldi	r25, 0x96	; 150
 338:	bb 27       	eor	r27, r27
 33a:	93 95       	inc	r25
 33c:	f6 95       	lsr	r31
 33e:	87 95       	ror	r24
 340:	77 95       	ror	r23
 342:	67 95       	ror	r22
 344:	b7 95       	ror	r27
 346:	f1 11       	cpse	r31, r1
 348:	f8 cf       	rjmp	.-16     	; 0x33a <__floatsisf+0x1c>
 34a:	fa f4       	brpl	.+62     	; 0x38a <__floatsisf+0x6c>
 34c:	bb 0f       	add	r27, r27
 34e:	11 f4       	brne	.+4      	; 0x354 <__floatsisf+0x36>
 350:	60 ff       	sbrs	r22, 0
 352:	1b c0       	rjmp	.+54     	; 0x38a <__floatsisf+0x6c>
 354:	6f 5f       	subi	r22, 0xFF	; 255
 356:	7f 4f       	sbci	r23, 0xFF	; 255
 358:	8f 4f       	sbci	r24, 0xFF	; 255
 35a:	9f 4f       	sbci	r25, 0xFF	; 255
 35c:	16 c0       	rjmp	.+44     	; 0x38a <__floatsisf+0x6c>
 35e:	88 23       	and	r24, r24
 360:	11 f0       	breq	.+4      	; 0x366 <__floatsisf+0x48>
 362:	96 e9       	ldi	r25, 0x96	; 150
 364:	11 c0       	rjmp	.+34     	; 0x388 <__floatsisf+0x6a>
 366:	77 23       	and	r23, r23
 368:	21 f0       	breq	.+8      	; 0x372 <__floatsisf+0x54>
 36a:	9e e8       	ldi	r25, 0x8E	; 142
 36c:	87 2f       	mov	r24, r23
 36e:	76 2f       	mov	r23, r22
 370:	05 c0       	rjmp	.+10     	; 0x37c <__floatsisf+0x5e>
 372:	66 23       	and	r22, r22
 374:	71 f0       	breq	.+28     	; 0x392 <__floatsisf+0x74>
 376:	96 e8       	ldi	r25, 0x86	; 134
 378:	86 2f       	mov	r24, r22
 37a:	70 e0       	ldi	r23, 0x00	; 0
 37c:	60 e0       	ldi	r22, 0x00	; 0
 37e:	2a f0       	brmi	.+10     	; 0x38a <__floatsisf+0x6c>
 380:	9a 95       	dec	r25
 382:	66 0f       	add	r22, r22
 384:	77 1f       	adc	r23, r23
 386:	88 1f       	adc	r24, r24
 388:	da f7       	brpl	.-10     	; 0x380 <__floatsisf+0x62>
 38a:	88 0f       	add	r24, r24
 38c:	96 95       	lsr	r25
 38e:	87 95       	ror	r24
 390:	97 f9       	bld	r25, 7
 392:	08 95       	ret

00000394 <__fp_inf>:
 394:	97 f9       	bld	r25, 7
 396:	9f 67       	ori	r25, 0x7F	; 127
 398:	80 e8       	ldi	r24, 0x80	; 128
 39a:	70 e0       	ldi	r23, 0x00	; 0
 39c:	60 e0       	ldi	r22, 0x00	; 0
 39e:	08 95       	ret

000003a0 <__fp_nan>:
 3a0:	9f ef       	ldi	r25, 0xFF	; 255
 3a2:	80 ec       	ldi	r24, 0xC0	; 192
 3a4:	08 95       	ret

000003a6 <__fp_pscA>:
 3a6:	00 24       	eor	r0, r0
 3a8:	0a 94       	dec	r0
 3aa:	16 16       	cp	r1, r22
 3ac:	17 06       	cpc	r1, r23
 3ae:	18 06       	cpc	r1, r24
 3b0:	09 06       	cpc	r0, r25
 3b2:	08 95       	ret

000003b4 <__fp_pscB>:
 3b4:	00 24       	eor	r0, r0
 3b6:	0a 94       	dec	r0
 3b8:	12 16       	cp	r1, r18
 3ba:	13 06       	cpc	r1, r19
 3bc:	14 06       	cpc	r1, r20
 3be:	05 06       	cpc	r0, r21
 3c0:	08 95       	ret

000003c2 <__fp_round>:
 3c2:	09 2e       	mov	r0, r25
 3c4:	03 94       	inc	r0
 3c6:	00 0c       	add	r0, r0
 3c8:	11 f4       	brne	.+4      	; 0x3ce <__fp_round+0xc>
 3ca:	88 23       	and	r24, r24
 3cc:	52 f0       	brmi	.+20     	; 0x3e2 <__fp_round+0x20>
 3ce:	bb 0f       	add	r27, r27
 3d0:	40 f4       	brcc	.+16     	; 0x3e2 <__fp_round+0x20>
 3d2:	bf 2b       	or	r27, r31
 3d4:	11 f4       	brne	.+4      	; 0x3da <__fp_round+0x18>
 3d6:	60 ff       	sbrs	r22, 0
 3d8:	04 c0       	rjmp	.+8      	; 0x3e2 <__fp_round+0x20>
 3da:	6f 5f       	subi	r22, 0xFF	; 255
 3dc:	7f 4f       	sbci	r23, 0xFF	; 255
 3de:	8f 4f       	sbci	r24, 0xFF	; 255
 3e0:	9f 4f       	sbci	r25, 0xFF	; 255
 3e2:	08 95       	ret

000003e4 <__fp_split3>:
 3e4:	57 fd       	sbrc	r21, 7
 3e6:	90 58       	subi	r25, 0x80	; 128
 3e8:	44 0f       	add	r20, r20
 3ea:	55 1f       	adc	r21, r21
 3ec:	59 f0       	breq	.+22     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3ee:	5f 3f       	cpi	r21, 0xFF	; 255
 3f0:	71 f0       	breq	.+28     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3f2:	47 95       	ror	r20

000003f4 <__fp_splitA>:
 3f4:	88 0f       	add	r24, r24
 3f6:	97 fb       	bst	r25, 7
 3f8:	99 1f       	adc	r25, r25
 3fa:	61 f0       	breq	.+24     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3fc:	9f 3f       	cpi	r25, 0xFF	; 255
 3fe:	79 f0       	breq	.+30     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 400:	87 95       	ror	r24
 402:	08 95       	ret
 404:	12 16       	cp	r1, r18
 406:	13 06       	cpc	r1, r19
 408:	14 06       	cpc	r1, r20
 40a:	55 1f       	adc	r21, r21
 40c:	f2 cf       	rjmp	.-28     	; 0x3f2 <__fp_split3+0xe>
 40e:	46 95       	lsr	r20
 410:	f1 df       	rcall	.-30     	; 0x3f4 <__fp_splitA>
 412:	08 c0       	rjmp	.+16     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 414:	16 16       	cp	r1, r22
 416:	17 06       	cpc	r1, r23
 418:	18 06       	cpc	r1, r24
 41a:	99 1f       	adc	r25, r25
 41c:	f1 cf       	rjmp	.-30     	; 0x400 <__LOCK_REGION_LENGTH__>
 41e:	86 95       	lsr	r24
 420:	71 05       	cpc	r23, r1
 422:	61 05       	cpc	r22, r1
 424:	08 94       	sec
 426:	08 95       	ret

00000428 <__fp_zero>:
 428:	e8 94       	clt

0000042a <__fp_szero>:
 42a:	bb 27       	eor	r27, r27
 42c:	66 27       	eor	r22, r22
 42e:	77 27       	eor	r23, r23
 430:	cb 01       	movw	r24, r22
 432:	97 f9       	bld	r25, 7
 434:	08 95       	ret

00000436 <__mulsf3>:
 436:	0e 94 2e 02 	call	0x45c	; 0x45c <__mulsf3x>
 43a:	0c 94 e1 01 	jmp	0x3c2	; 0x3c2 <__fp_round>
 43e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <__fp_pscA>
 442:	38 f0       	brcs	.+14     	; 0x452 <__mulsf3+0x1c>
 444:	0e 94 da 01 	call	0x3b4	; 0x3b4 <__fp_pscB>
 448:	20 f0       	brcs	.+8      	; 0x452 <__mulsf3+0x1c>
 44a:	95 23       	and	r25, r21
 44c:	11 f0       	breq	.+4      	; 0x452 <__mulsf3+0x1c>
 44e:	0c 94 ca 01 	jmp	0x394	; 0x394 <__fp_inf>
 452:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__fp_nan>
 456:	11 24       	eor	r1, r1
 458:	0c 94 15 02 	jmp	0x42a	; 0x42a <__fp_szero>

0000045c <__mulsf3x>:
 45c:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__fp_split3>
 460:	70 f3       	brcs	.-36     	; 0x43e <__mulsf3+0x8>

00000462 <__mulsf3_pse>:
 462:	95 9f       	mul	r25, r21
 464:	c1 f3       	breq	.-16     	; 0x456 <__mulsf3+0x20>
 466:	95 0f       	add	r25, r21
 468:	50 e0       	ldi	r21, 0x00	; 0
 46a:	55 1f       	adc	r21, r21
 46c:	62 9f       	mul	r22, r18
 46e:	f0 01       	movw	r30, r0
 470:	72 9f       	mul	r23, r18
 472:	bb 27       	eor	r27, r27
 474:	f0 0d       	add	r31, r0
 476:	b1 1d       	adc	r27, r1
 478:	63 9f       	mul	r22, r19
 47a:	aa 27       	eor	r26, r26
 47c:	f0 0d       	add	r31, r0
 47e:	b1 1d       	adc	r27, r1
 480:	aa 1f       	adc	r26, r26
 482:	64 9f       	mul	r22, r20
 484:	66 27       	eor	r22, r22
 486:	b0 0d       	add	r27, r0
 488:	a1 1d       	adc	r26, r1
 48a:	66 1f       	adc	r22, r22
 48c:	82 9f       	mul	r24, r18
 48e:	22 27       	eor	r18, r18
 490:	b0 0d       	add	r27, r0
 492:	a1 1d       	adc	r26, r1
 494:	62 1f       	adc	r22, r18
 496:	73 9f       	mul	r23, r19
 498:	b0 0d       	add	r27, r0
 49a:	a1 1d       	adc	r26, r1
 49c:	62 1f       	adc	r22, r18
 49e:	83 9f       	mul	r24, r19
 4a0:	a0 0d       	add	r26, r0
 4a2:	61 1d       	adc	r22, r1
 4a4:	22 1f       	adc	r18, r18
 4a6:	74 9f       	mul	r23, r20
 4a8:	33 27       	eor	r19, r19
 4aa:	a0 0d       	add	r26, r0
 4ac:	61 1d       	adc	r22, r1
 4ae:	23 1f       	adc	r18, r19
 4b0:	84 9f       	mul	r24, r20
 4b2:	60 0d       	add	r22, r0
 4b4:	21 1d       	adc	r18, r1
 4b6:	82 2f       	mov	r24, r18
 4b8:	76 2f       	mov	r23, r22
 4ba:	6a 2f       	mov	r22, r26
 4bc:	11 24       	eor	r1, r1
 4be:	9f 57       	subi	r25, 0x7F	; 127
 4c0:	50 40       	sbci	r21, 0x00	; 0
 4c2:	9a f0       	brmi	.+38     	; 0x4ea <__mulsf3_pse+0x88>
 4c4:	f1 f0       	breq	.+60     	; 0x502 <__mulsf3_pse+0xa0>
 4c6:	88 23       	and	r24, r24
 4c8:	4a f0       	brmi	.+18     	; 0x4dc <__mulsf3_pse+0x7a>
 4ca:	ee 0f       	add	r30, r30
 4cc:	ff 1f       	adc	r31, r31
 4ce:	bb 1f       	adc	r27, r27
 4d0:	66 1f       	adc	r22, r22
 4d2:	77 1f       	adc	r23, r23
 4d4:	88 1f       	adc	r24, r24
 4d6:	91 50       	subi	r25, 0x01	; 1
 4d8:	50 40       	sbci	r21, 0x00	; 0
 4da:	a9 f7       	brne	.-22     	; 0x4c6 <__mulsf3_pse+0x64>
 4dc:	9e 3f       	cpi	r25, 0xFE	; 254
 4de:	51 05       	cpc	r21, r1
 4e0:	80 f0       	brcs	.+32     	; 0x502 <__mulsf3_pse+0xa0>
 4e2:	0c 94 ca 01 	jmp	0x394	; 0x394 <__fp_inf>
 4e6:	0c 94 15 02 	jmp	0x42a	; 0x42a <__fp_szero>
 4ea:	5f 3f       	cpi	r21, 0xFF	; 255
 4ec:	e4 f3       	brlt	.-8      	; 0x4e6 <__mulsf3_pse+0x84>
 4ee:	98 3e       	cpi	r25, 0xE8	; 232
 4f0:	d4 f3       	brlt	.-12     	; 0x4e6 <__mulsf3_pse+0x84>
 4f2:	86 95       	lsr	r24
 4f4:	77 95       	ror	r23
 4f6:	67 95       	ror	r22
 4f8:	b7 95       	ror	r27
 4fa:	f7 95       	ror	r31
 4fc:	e7 95       	ror	r30
 4fe:	9f 5f       	subi	r25, 0xFF	; 255
 500:	c1 f7       	brne	.-16     	; 0x4f2 <__mulsf3_pse+0x90>
 502:	fe 2b       	or	r31, r30
 504:	88 0f       	add	r24, r24
 506:	91 1d       	adc	r25, r1
 508:	96 95       	lsr	r25
 50a:	87 95       	ror	r24
 50c:	97 f9       	bld	r25, 7
 50e:	08 95       	ret

00000510 <__umulhisi3>:
 510:	a2 9f       	mul	r26, r18
 512:	b0 01       	movw	r22, r0
 514:	b3 9f       	mul	r27, r19
 516:	c0 01       	movw	r24, r0
 518:	a3 9f       	mul	r26, r19
 51a:	70 0d       	add	r23, r0
 51c:	81 1d       	adc	r24, r1
 51e:	11 24       	eor	r1, r1
 520:	91 1d       	adc	r25, r1
 522:	b2 9f       	mul	r27, r18
 524:	70 0d       	add	r23, r0
 526:	81 1d       	adc	r24, r1
 528:	11 24       	eor	r1, r1
 52a:	91 1d       	adc	r25, r1
 52c:	08 95       	ret

0000052e <_exit>:
 52e:	f8 94       	cli

00000530 <__stop_program>:
 530:	ff cf       	rjmp	.-2      	; 0x530 <__stop_program>
