
ADCPWM1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000380  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003d4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000404  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000444  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006b7  00000000  00000000  0000046c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000061f  00000000  00000000  00000b23  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000022c  00000000  00000000  00001142  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000007c  00000000  00000000  00001370  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000035a  00000000  00000000  000013ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000ec  00000000  00000000  00001746  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001832  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 40 00 	jmp	0x80	; 0x80 <__vector_21>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 7b 00 	call	0xf6	; 0xf6 <main>
  78:	0c 94 be 01 	jmp	0x37c	; 0x37c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <__vector_21>:
#include <avr/io.h> 
#include <avr/interrupt.h>
ISR(ADC_vect) { 
  80:	1f 92       	push	r1
  82:	0f 92       	push	r0
  84:	0f b6       	in	r0, 0x3f	; 63
  86:	0f 92       	push	r0
  88:	11 24       	eor	r1, r1
  8a:	2f 93       	push	r18
  8c:	3f 93       	push	r19
  8e:	4f 93       	push	r20
  90:	5f 93       	push	r21
  92:	6f 93       	push	r22
  94:	7f 93       	push	r23
  96:	8f 93       	push	r24
  98:	9f 93       	push	r25
  9a:	af 93       	push	r26
  9c:	bf 93       	push	r27
  9e:	ef 93       	push	r30
  a0:	ff 93       	push	r31
	float aux ;
	aux = 9.774*ADCW; // Calcula el ciclo de trabajo 
  a2:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
  a6:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
	OCR1A = aux ; 
  aa:	80 e0       	ldi	r24, 0x00	; 0
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	0e 94 c3 00 	call	0x186	; 0x186 <__floatunsisf>
  b2:	2e e4       	ldi	r18, 0x4E	; 78
  b4:	32 e6       	ldi	r19, 0x62	; 98
  b6:	4c e1       	ldi	r20, 0x1C	; 28
  b8:	51 e4       	ldi	r21, 0x41	; 65
  ba:	0e 94 29 01 	call	0x252	; 0x252 <__mulsf3>
  be:	0e 94 94 00 	call	0x128	; 0x128 <__fixunssfsi>
  c2:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
  c6:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	ADCSRA |= 1 << ADSC; // Inicia una nueva conversi´on
  ca:	ea e7       	ldi	r30, 0x7A	; 122
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	80 64       	ori	r24, 0x40	; 64
  d2:	80 83       	st	Z, r24
}
  d4:	ff 91       	pop	r31
  d6:	ef 91       	pop	r30
  d8:	bf 91       	pop	r27
  da:	af 91       	pop	r26
  dc:	9f 91       	pop	r25
  de:	8f 91       	pop	r24
  e0:	7f 91       	pop	r23
  e2:	6f 91       	pop	r22
  e4:	5f 91       	pop	r21
  e6:	4f 91       	pop	r20
  e8:	3f 91       	pop	r19
  ea:	2f 91       	pop	r18
  ec:	0f 90       	pop	r0
  ee:	0f be       	out	0x3f, r0	; 63
  f0:	0f 90       	pop	r0
  f2:	1f 90       	pop	r1
  f4:	18 95       	reti

000000f6 <main>:
int main() {
	DDRB = 0xFF; // Salida en OC1A (PB1)
  f6:	8f ef       	ldi	r24, 0xFF	; 255
  f8:	84 b9       	out	0x04, r24	; 4
	ADMUX = 0x00 ; // Selecciona ADC0 y Vref en AREF 
  fa:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	ADCSRA = 0xCB; // Habilita ADC con interrupci´on, inicia
  fe:	8b ec       	ldi	r24, 0xCB	; 203
 100:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
	DIDR0 = 0x01 ; // Anula el buffer digital en ADC0
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__DATA_REGION_ORIGIN__+0x1e>
	ICR1 = 9999; // Valor m´aximo para 10 mS 
 10a:	8f e0       	ldi	r24, 0x0F	; 15
 10c:	97 e2       	ldi	r25, 0x27	; 39
 10e:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 112:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
	TCCR1A = 0x82 ; // PWM r´apido , modo no invertido 
 116:	82 e8       	ldi	r24, 0x82	; 130
 118:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
	TCCR1B = 0x19 ; // Reloj sin preescala
 11c:	89 e1       	ldi	r24, 0x19	; 25
 11e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
	sei (); // Habilitador global de interrupciones 
 122:	78 94       	sei
	while(1) 
		asm("NOP");
 124:	00 00       	nop
 126:	fe cf       	rjmp	.-4      	; 0x124 <main+0x2e>

00000128 <__fixunssfsi>:
 128:	0e 94 08 01 	call	0x210	; 0x210 <__fp_splitA>
 12c:	88 f0       	brcs	.+34     	; 0x150 <__fixunssfsi+0x28>
 12e:	9f 57       	subi	r25, 0x7F	; 127
 130:	98 f0       	brcs	.+38     	; 0x158 <__fixunssfsi+0x30>
 132:	b9 2f       	mov	r27, r25
 134:	99 27       	eor	r25, r25
 136:	b7 51       	subi	r27, 0x17	; 23
 138:	b0 f0       	brcs	.+44     	; 0x166 <__fixunssfsi+0x3e>
 13a:	e1 f0       	breq	.+56     	; 0x174 <__fixunssfsi+0x4c>
 13c:	66 0f       	add	r22, r22
 13e:	77 1f       	adc	r23, r23
 140:	88 1f       	adc	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	1a f0       	brmi	.+6      	; 0x14c <__fixunssfsi+0x24>
 146:	ba 95       	dec	r27
 148:	c9 f7       	brne	.-14     	; 0x13c <__fixunssfsi+0x14>
 14a:	14 c0       	rjmp	.+40     	; 0x174 <__fixunssfsi+0x4c>
 14c:	b1 30       	cpi	r27, 0x01	; 1
 14e:	91 f0       	breq	.+36     	; 0x174 <__fixunssfsi+0x4c>
 150:	0e 94 22 01 	call	0x244	; 0x244 <__fp_zero>
 154:	b1 e0       	ldi	r27, 0x01	; 1
 156:	08 95       	ret
 158:	0c 94 22 01 	jmp	0x244	; 0x244 <__fp_zero>
 15c:	67 2f       	mov	r22, r23
 15e:	78 2f       	mov	r23, r24
 160:	88 27       	eor	r24, r24
 162:	b8 5f       	subi	r27, 0xF8	; 248
 164:	39 f0       	breq	.+14     	; 0x174 <__fixunssfsi+0x4c>
 166:	b9 3f       	cpi	r27, 0xF9	; 249
 168:	cc f3       	brlt	.-14     	; 0x15c <__fixunssfsi+0x34>
 16a:	86 95       	lsr	r24
 16c:	77 95       	ror	r23
 16e:	67 95       	ror	r22
 170:	b3 95       	inc	r27
 172:	d9 f7       	brne	.-10     	; 0x16a <__fixunssfsi+0x42>
 174:	3e f4       	brtc	.+14     	; 0x184 <__fixunssfsi+0x5c>
 176:	90 95       	com	r25
 178:	80 95       	com	r24
 17a:	70 95       	com	r23
 17c:	61 95       	neg	r22
 17e:	7f 4f       	sbci	r23, 0xFF	; 255
 180:	8f 4f       	sbci	r24, 0xFF	; 255
 182:	9f 4f       	sbci	r25, 0xFF	; 255
 184:	08 95       	ret

00000186 <__floatunsisf>:
 186:	e8 94       	clt
 188:	09 c0       	rjmp	.+18     	; 0x19c <__floatsisf+0x12>

0000018a <__floatsisf>:
 18a:	97 fb       	bst	r25, 7
 18c:	3e f4       	brtc	.+14     	; 0x19c <__floatsisf+0x12>
 18e:	90 95       	com	r25
 190:	80 95       	com	r24
 192:	70 95       	com	r23
 194:	61 95       	neg	r22
 196:	7f 4f       	sbci	r23, 0xFF	; 255
 198:	8f 4f       	sbci	r24, 0xFF	; 255
 19a:	9f 4f       	sbci	r25, 0xFF	; 255
 19c:	99 23       	and	r25, r25
 19e:	a9 f0       	breq	.+42     	; 0x1ca <__floatsisf+0x40>
 1a0:	f9 2f       	mov	r31, r25
 1a2:	96 e9       	ldi	r25, 0x96	; 150
 1a4:	bb 27       	eor	r27, r27
 1a6:	93 95       	inc	r25
 1a8:	f6 95       	lsr	r31
 1aa:	87 95       	ror	r24
 1ac:	77 95       	ror	r23
 1ae:	67 95       	ror	r22
 1b0:	b7 95       	ror	r27
 1b2:	f1 11       	cpse	r31, r1
 1b4:	f8 cf       	rjmp	.-16     	; 0x1a6 <__floatsisf+0x1c>
 1b6:	fa f4       	brpl	.+62     	; 0x1f6 <__floatsisf+0x6c>
 1b8:	bb 0f       	add	r27, r27
 1ba:	11 f4       	brne	.+4      	; 0x1c0 <__floatsisf+0x36>
 1bc:	60 ff       	sbrs	r22, 0
 1be:	1b c0       	rjmp	.+54     	; 0x1f6 <__floatsisf+0x6c>
 1c0:	6f 5f       	subi	r22, 0xFF	; 255
 1c2:	7f 4f       	sbci	r23, 0xFF	; 255
 1c4:	8f 4f       	sbci	r24, 0xFF	; 255
 1c6:	9f 4f       	sbci	r25, 0xFF	; 255
 1c8:	16 c0       	rjmp	.+44     	; 0x1f6 <__floatsisf+0x6c>
 1ca:	88 23       	and	r24, r24
 1cc:	11 f0       	breq	.+4      	; 0x1d2 <__floatsisf+0x48>
 1ce:	96 e9       	ldi	r25, 0x96	; 150
 1d0:	11 c0       	rjmp	.+34     	; 0x1f4 <__floatsisf+0x6a>
 1d2:	77 23       	and	r23, r23
 1d4:	21 f0       	breq	.+8      	; 0x1de <__floatsisf+0x54>
 1d6:	9e e8       	ldi	r25, 0x8E	; 142
 1d8:	87 2f       	mov	r24, r23
 1da:	76 2f       	mov	r23, r22
 1dc:	05 c0       	rjmp	.+10     	; 0x1e8 <__floatsisf+0x5e>
 1de:	66 23       	and	r22, r22
 1e0:	71 f0       	breq	.+28     	; 0x1fe <__floatsisf+0x74>
 1e2:	96 e8       	ldi	r25, 0x86	; 134
 1e4:	86 2f       	mov	r24, r22
 1e6:	70 e0       	ldi	r23, 0x00	; 0
 1e8:	60 e0       	ldi	r22, 0x00	; 0
 1ea:	2a f0       	brmi	.+10     	; 0x1f6 <__floatsisf+0x6c>
 1ec:	9a 95       	dec	r25
 1ee:	66 0f       	add	r22, r22
 1f0:	77 1f       	adc	r23, r23
 1f2:	88 1f       	adc	r24, r24
 1f4:	da f7       	brpl	.-10     	; 0x1ec <__floatsisf+0x62>
 1f6:	88 0f       	add	r24, r24
 1f8:	96 95       	lsr	r25
 1fa:	87 95       	ror	r24
 1fc:	97 f9       	bld	r25, 7
 1fe:	08 95       	ret

00000200 <__fp_split3>:
 200:	57 fd       	sbrc	r21, 7
 202:	90 58       	subi	r25, 0x80	; 128
 204:	44 0f       	add	r20, r20
 206:	55 1f       	adc	r21, r21
 208:	59 f0       	breq	.+22     	; 0x220 <__fp_splitA+0x10>
 20a:	5f 3f       	cpi	r21, 0xFF	; 255
 20c:	71 f0       	breq	.+28     	; 0x22a <__fp_splitA+0x1a>
 20e:	47 95       	ror	r20

00000210 <__fp_splitA>:
 210:	88 0f       	add	r24, r24
 212:	97 fb       	bst	r25, 7
 214:	99 1f       	adc	r25, r25
 216:	61 f0       	breq	.+24     	; 0x230 <__fp_splitA+0x20>
 218:	9f 3f       	cpi	r25, 0xFF	; 255
 21a:	79 f0       	breq	.+30     	; 0x23a <__fp_splitA+0x2a>
 21c:	87 95       	ror	r24
 21e:	08 95       	ret
 220:	12 16       	cp	r1, r18
 222:	13 06       	cpc	r1, r19
 224:	14 06       	cpc	r1, r20
 226:	55 1f       	adc	r21, r21
 228:	f2 cf       	rjmp	.-28     	; 0x20e <__fp_split3+0xe>
 22a:	46 95       	lsr	r20
 22c:	f1 df       	rcall	.-30     	; 0x210 <__fp_splitA>
 22e:	08 c0       	rjmp	.+16     	; 0x240 <__fp_splitA+0x30>
 230:	16 16       	cp	r1, r22
 232:	17 06       	cpc	r1, r23
 234:	18 06       	cpc	r1, r24
 236:	99 1f       	adc	r25, r25
 238:	f1 cf       	rjmp	.-30     	; 0x21c <__fp_splitA+0xc>
 23a:	86 95       	lsr	r24
 23c:	71 05       	cpc	r23, r1
 23e:	61 05       	cpc	r22, r1
 240:	08 94       	sec
 242:	08 95       	ret

00000244 <__fp_zero>:
 244:	e8 94       	clt

00000246 <__fp_szero>:
 246:	bb 27       	eor	r27, r27
 248:	66 27       	eor	r22, r22
 24a:	77 27       	eor	r23, r23
 24c:	cb 01       	movw	r24, r22
 24e:	97 f9       	bld	r25, 7
 250:	08 95       	ret

00000252 <__mulsf3>:
 252:	0e 94 3c 01 	call	0x278	; 0x278 <__mulsf3x>
 256:	0c 94 ad 01 	jmp	0x35a	; 0x35a <__fp_round>
 25a:	0e 94 9f 01 	call	0x33e	; 0x33e <__fp_pscA>
 25e:	38 f0       	brcs	.+14     	; 0x26e <__mulsf3+0x1c>
 260:	0e 94 a6 01 	call	0x34c	; 0x34c <__fp_pscB>
 264:	20 f0       	brcs	.+8      	; 0x26e <__mulsf3+0x1c>
 266:	95 23       	and	r25, r21
 268:	11 f0       	breq	.+4      	; 0x26e <__mulsf3+0x1c>
 26a:	0c 94 96 01 	jmp	0x32c	; 0x32c <__fp_inf>
 26e:	0c 94 9c 01 	jmp	0x338	; 0x338 <__fp_nan>
 272:	11 24       	eor	r1, r1
 274:	0c 94 23 01 	jmp	0x246	; 0x246 <__fp_szero>

00000278 <__mulsf3x>:
 278:	0e 94 00 01 	call	0x200	; 0x200 <__fp_split3>
 27c:	70 f3       	brcs	.-36     	; 0x25a <__mulsf3+0x8>

0000027e <__mulsf3_pse>:
 27e:	95 9f       	mul	r25, r21
 280:	c1 f3       	breq	.-16     	; 0x272 <__mulsf3+0x20>
 282:	95 0f       	add	r25, r21
 284:	50 e0       	ldi	r21, 0x00	; 0
 286:	55 1f       	adc	r21, r21
 288:	62 9f       	mul	r22, r18
 28a:	f0 01       	movw	r30, r0
 28c:	72 9f       	mul	r23, r18
 28e:	bb 27       	eor	r27, r27
 290:	f0 0d       	add	r31, r0
 292:	b1 1d       	adc	r27, r1
 294:	63 9f       	mul	r22, r19
 296:	aa 27       	eor	r26, r26
 298:	f0 0d       	add	r31, r0
 29a:	b1 1d       	adc	r27, r1
 29c:	aa 1f       	adc	r26, r26
 29e:	64 9f       	mul	r22, r20
 2a0:	66 27       	eor	r22, r22
 2a2:	b0 0d       	add	r27, r0
 2a4:	a1 1d       	adc	r26, r1
 2a6:	66 1f       	adc	r22, r22
 2a8:	82 9f       	mul	r24, r18
 2aa:	22 27       	eor	r18, r18
 2ac:	b0 0d       	add	r27, r0
 2ae:	a1 1d       	adc	r26, r1
 2b0:	62 1f       	adc	r22, r18
 2b2:	73 9f       	mul	r23, r19
 2b4:	b0 0d       	add	r27, r0
 2b6:	a1 1d       	adc	r26, r1
 2b8:	62 1f       	adc	r22, r18
 2ba:	83 9f       	mul	r24, r19
 2bc:	a0 0d       	add	r26, r0
 2be:	61 1d       	adc	r22, r1
 2c0:	22 1f       	adc	r18, r18
 2c2:	74 9f       	mul	r23, r20
 2c4:	33 27       	eor	r19, r19
 2c6:	a0 0d       	add	r26, r0
 2c8:	61 1d       	adc	r22, r1
 2ca:	23 1f       	adc	r18, r19
 2cc:	84 9f       	mul	r24, r20
 2ce:	60 0d       	add	r22, r0
 2d0:	21 1d       	adc	r18, r1
 2d2:	82 2f       	mov	r24, r18
 2d4:	76 2f       	mov	r23, r22
 2d6:	6a 2f       	mov	r22, r26
 2d8:	11 24       	eor	r1, r1
 2da:	9f 57       	subi	r25, 0x7F	; 127
 2dc:	50 40       	sbci	r21, 0x00	; 0
 2de:	9a f0       	brmi	.+38     	; 0x306 <__mulsf3_pse+0x88>
 2e0:	f1 f0       	breq	.+60     	; 0x31e <__mulsf3_pse+0xa0>
 2e2:	88 23       	and	r24, r24
 2e4:	4a f0       	brmi	.+18     	; 0x2f8 <__mulsf3_pse+0x7a>
 2e6:	ee 0f       	add	r30, r30
 2e8:	ff 1f       	adc	r31, r31
 2ea:	bb 1f       	adc	r27, r27
 2ec:	66 1f       	adc	r22, r22
 2ee:	77 1f       	adc	r23, r23
 2f0:	88 1f       	adc	r24, r24
 2f2:	91 50       	subi	r25, 0x01	; 1
 2f4:	50 40       	sbci	r21, 0x00	; 0
 2f6:	a9 f7       	brne	.-22     	; 0x2e2 <__mulsf3_pse+0x64>
 2f8:	9e 3f       	cpi	r25, 0xFE	; 254
 2fa:	51 05       	cpc	r21, r1
 2fc:	80 f0       	brcs	.+32     	; 0x31e <__mulsf3_pse+0xa0>
 2fe:	0c 94 96 01 	jmp	0x32c	; 0x32c <__fp_inf>
 302:	0c 94 23 01 	jmp	0x246	; 0x246 <__fp_szero>
 306:	5f 3f       	cpi	r21, 0xFF	; 255
 308:	e4 f3       	brlt	.-8      	; 0x302 <__mulsf3_pse+0x84>
 30a:	98 3e       	cpi	r25, 0xE8	; 232
 30c:	d4 f3       	brlt	.-12     	; 0x302 <__mulsf3_pse+0x84>
 30e:	86 95       	lsr	r24
 310:	77 95       	ror	r23
 312:	67 95       	ror	r22
 314:	b7 95       	ror	r27
 316:	f7 95       	ror	r31
 318:	e7 95       	ror	r30
 31a:	9f 5f       	subi	r25, 0xFF	; 255
 31c:	c1 f7       	brne	.-16     	; 0x30e <__mulsf3_pse+0x90>
 31e:	fe 2b       	or	r31, r30
 320:	88 0f       	add	r24, r24
 322:	91 1d       	adc	r25, r1
 324:	96 95       	lsr	r25
 326:	87 95       	ror	r24
 328:	97 f9       	bld	r25, 7
 32a:	08 95       	ret

0000032c <__fp_inf>:
 32c:	97 f9       	bld	r25, 7
 32e:	9f 67       	ori	r25, 0x7F	; 127
 330:	80 e8       	ldi	r24, 0x80	; 128
 332:	70 e0       	ldi	r23, 0x00	; 0
 334:	60 e0       	ldi	r22, 0x00	; 0
 336:	08 95       	ret

00000338 <__fp_nan>:
 338:	9f ef       	ldi	r25, 0xFF	; 255
 33a:	80 ec       	ldi	r24, 0xC0	; 192
 33c:	08 95       	ret

0000033e <__fp_pscA>:
 33e:	00 24       	eor	r0, r0
 340:	0a 94       	dec	r0
 342:	16 16       	cp	r1, r22
 344:	17 06       	cpc	r1, r23
 346:	18 06       	cpc	r1, r24
 348:	09 06       	cpc	r0, r25
 34a:	08 95       	ret

0000034c <__fp_pscB>:
 34c:	00 24       	eor	r0, r0
 34e:	0a 94       	dec	r0
 350:	12 16       	cp	r1, r18
 352:	13 06       	cpc	r1, r19
 354:	14 06       	cpc	r1, r20
 356:	05 06       	cpc	r0, r21
 358:	08 95       	ret

0000035a <__fp_round>:
 35a:	09 2e       	mov	r0, r25
 35c:	03 94       	inc	r0
 35e:	00 0c       	add	r0, r0
 360:	11 f4       	brne	.+4      	; 0x366 <__fp_round+0xc>
 362:	88 23       	and	r24, r24
 364:	52 f0       	brmi	.+20     	; 0x37a <__fp_round+0x20>
 366:	bb 0f       	add	r27, r27
 368:	40 f4       	brcc	.+16     	; 0x37a <__fp_round+0x20>
 36a:	bf 2b       	or	r27, r31
 36c:	11 f4       	brne	.+4      	; 0x372 <__fp_round+0x18>
 36e:	60 ff       	sbrs	r22, 0
 370:	04 c0       	rjmp	.+8      	; 0x37a <__fp_round+0x20>
 372:	6f 5f       	subi	r22, 0xFF	; 255
 374:	7f 4f       	sbci	r23, 0xFF	; 255
 376:	8f 4f       	sbci	r24, 0xFF	; 255
 378:	9f 4f       	sbci	r25, 0xFF	; 255
 37a:	08 95       	ret

0000037c <_exit>:
 37c:	f8 94       	cli

0000037e <__stop_program>:
 37e:	ff cf       	rjmp	.-2      	; 0x37e <__stop_program>
