
ContadorUpDown.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000176  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001ca  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001fc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000760  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000069f  00000000  00000000  000009c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000033e  00000000  00000000  00001063  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000013a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ac  00000000  00000000  000013d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000141  00000000  00000000  00001784  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  000018c5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
   8:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
   c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  10:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  14:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  18:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  1c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  20:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  24:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  28:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  2c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  30:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  34:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  38:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  3c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  40:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  44:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  48:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  4c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  50:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  54:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  58:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  5c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  60:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  64:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  68:	96 00       	.word	0x0096	; ????
  6a:	9a 00       	.word	0x009a	; ????
  6c:	9c 00       	.word	0x009c	; ????
  6e:	9e 00       	.word	0x009e	; ????
  70:	a0 00       	.word	0x00a0	; ????
  72:	a2 00       	.word	0x00a2	; ????
  74:	a4 00       	.word	0x00a4	; ????
  76:	a6 00       	.word	0x00a6	; ????
  78:	a8 00       	.word	0x00a8	; ????
  7a:	aa 00       	.word	0x00aa	; ????

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61
  88:	0e 94 55 00 	call	0xaa	; 0xaa <main>
  8c:	0c 94 b9 00 	jmp	0x172	; 0x172 <_exit>

00000090 <__bad_interrupt>:
  90:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000094 <delay_200>:
			case 9: PORTD=0x67; break;
		}
		delay_200();
	}
}
void delay_200(){
  94:	8f e0       	ldi	r24, 0x0F	; 15
  96:	90 e0       	ldi	r25, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  98:	ef e3       	ldi	r30, 0x3F	; 63
  9a:	fc e9       	ldi	r31, 0x9C	; 156
  9c:	31 97       	sbiw	r30, 0x01	; 1
  9e:	f1 f7       	brne	.-4      	; 0x9c <delay_200+0x8>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <delay_200+0xe>
  a2:	00 00       	nop
  a4:	01 97       	sbiw	r24, 0x01	; 1
	int i=0;
	for(i=0;i<15;i++)
  a6:	c1 f7       	brne	.-16     	; 0x98 <delay_200+0x4>
	_delay_ms(10);
}
  a8:	08 95       	ret

000000aa <main>:
void delay_200();

int main(void){
	uint8_t up,down;
	int cont=0;
	DDRC=0X00;
  aa:	17 b8       	out	0x07, r1	; 7
	PORTC=0XFF;
  ac:	8f ef       	ldi	r24, 0xFF	; 255
  ae:	88 b9       	out	0x08, r24	; 8
	DDRD=0XFF;
  b0:	8a b9       	out	0x0a, r24	; 10
#include <stdio.h>
void delay_200();

int main(void){
	uint8_t up,down;
	int cont=0;
  b2:	c0 e0       	ldi	r28, 0x00	; 0
  b4:	d0 e0       	ldi	r29, 0x00	; 0
			case 4: PORTD=0x66; break;
			case 5: PORTD=0x6D; break;
			case 6: PORTD=0x7D; break;
			case 7: PORTD=0x47; break;
			case 8: PORTD=0x7F; break;
			case 9: PORTD=0x67; break;
  b6:	0f 2e       	mov	r0, r31
  b8:	f7 e6       	ldi	r31, 0x67	; 103
  ba:	8f 2e       	mov	r8, r31
  bc:	f0 2d       	mov	r31, r0
			}
			else
			cont--;
		}
		switch(cont){
			case 0: PORTD=0x3F; break;
  be:	0f 2e       	mov	r0, r31
  c0:	ff e3       	ldi	r31, 0x3F	; 63
  c2:	9f 2e       	mov	r9, r31
  c4:	f0 2d       	mov	r31, r0
			case 3: PORTD=0x4F; break;
			case 4: PORTD=0x66; break;
			case 5: PORTD=0x6D; break;
			case 6: PORTD=0x7D; break;
			case 7: PORTD=0x47; break;
			case 8: PORTD=0x7F; break;
  c6:	0f 2e       	mov	r0, r31
  c8:	ff e7       	ldi	r31, 0x7F	; 127
  ca:	af 2e       	mov	r10, r31
  cc:	f0 2d       	mov	r31, r0
			case 2: PORTD=0x5B; break;
			case 3: PORTD=0x4F; break;
			case 4: PORTD=0x66; break;
			case 5: PORTD=0x6D; break;
			case 6: PORTD=0x7D; break;
			case 7: PORTD=0x47; break;
  ce:	0f 2e       	mov	r0, r31
  d0:	f7 e4       	ldi	r31, 0x47	; 71
  d2:	bf 2e       	mov	r11, r31
  d4:	f0 2d       	mov	r31, r0
			case 1: PORTD=0x06; break;
			case 2: PORTD=0x5B; break;
			case 3: PORTD=0x4F; break;
			case 4: PORTD=0x66; break;
			case 5: PORTD=0x6D; break;
			case 6: PORTD=0x7D; break;
  d6:	0f 2e       	mov	r0, r31
  d8:	fd e7       	ldi	r31, 0x7D	; 125
  da:	cf 2e       	mov	r12, r31
  dc:	f0 2d       	mov	r31, r0
			case 0: PORTD=0x3F; break;
			case 1: PORTD=0x06; break;
			case 2: PORTD=0x5B; break;
			case 3: PORTD=0x4F; break;
			case 4: PORTD=0x66; break;
			case 5: PORTD=0x6D; break;
  de:	0f 2e       	mov	r0, r31
  e0:	fd e6       	ldi	r31, 0x6D	; 109
  e2:	df 2e       	mov	r13, r31
  e4:	f0 2d       	mov	r31, r0
		switch(cont){
			case 0: PORTD=0x3F; break;
			case 1: PORTD=0x06; break;
			case 2: PORTD=0x5B; break;
			case 3: PORTD=0x4F; break;
			case 4: PORTD=0x66; break;
  e6:	0f 2e       	mov	r0, r31
  e8:	f6 e6       	ldi	r31, 0x66	; 102
  ea:	ef 2e       	mov	r14, r31
  ec:	f0 2d       	mov	r31, r0
		}
		switch(cont){
			case 0: PORTD=0x3F; break;
			case 1: PORTD=0x06; break;
			case 2: PORTD=0x5B; break;
			case 3: PORTD=0x4F; break;
  ee:	0f 2e       	mov	r0, r31
  f0:	ff e4       	ldi	r31, 0x4F	; 79
  f2:	ff 2e       	mov	r15, r31
  f4:	f0 2d       	mov	r31, r0
			cont--;
		}
		switch(cont){
			case 0: PORTD=0x3F; break;
			case 1: PORTD=0x06; break;
			case 2: PORTD=0x5B; break;
  f6:	0b e5       	ldi	r16, 0x5B	; 91
			else
			cont--;
		}
		switch(cont){
			case 0: PORTD=0x3F; break;
			case 1: PORTD=0x06; break;
  f8:	16 e0       	ldi	r17, 0x06	; 6
	int cont=0;
	DDRC=0X00;
	PORTC=0XFF;
	DDRD=0XFF;
	while (1) {
		up = PINC & 0x01;
  fa:	96 b1       	in	r25, 0x06	; 6
		down = PINC & 0x02;
  fc:	86 b1       	in	r24, 0x06	; 6
  fe:	82 70       	andi	r24, 0x02	; 2
		if(up==0x01){
 100:	90 ff       	sbrs	r25, 0
 102:	04 c0       	rjmp	.+8      	; 0x10c <main+0x62>
			if(cont>9){
 104:	ca 30       	cpi	r28, 0x0A	; 10
 106:	d1 05       	cpc	r29, r1
 108:	5c f5       	brge	.+86     	; 0x160 <main+0xb6>
				cont=0;
			}
			else
			cont++;
 10a:	21 96       	adiw	r28, 0x01	; 1
		}
		if(down==0x02){
 10c:	82 30       	cpi	r24, 0x02	; 2
 10e:	31 f4       	brne	.+12     	; 0x11c <main+0x72>
			if(cont<0){
 110:	dd 23       	and	r29, r29
 112:	1c f4       	brge	.+6      	; 0x11a <main+0x70>
 114:	1f c0       	rjmp	.+62     	; 0x154 <main+0xaa>
	while (1) {
		up = PINC & 0x01;
		down = PINC & 0x02;
		if(up==0x01){
			if(cont>9){
				cont=0;
 116:	c0 e0       	ldi	r28, 0x00	; 0
 118:	d0 e0       	ldi	r29, 0x00	; 0
		if(down==0x02){
			if(cont<0){
				cont=9;
			}
			else
			cont--;
 11a:	21 97       	sbiw	r28, 0x01	; 1
		}
		switch(cont){
 11c:	ca 30       	cpi	r28, 0x0A	; 10
 11e:	d1 05       	cpc	r29, r1
 120:	e0 f4       	brcc	.+56     	; 0x15a <main+0xb0>
 122:	fe 01       	movw	r30, r28
 124:	ec 5c       	subi	r30, 0xCC	; 204
 126:	ff 4f       	sbci	r31, 0xFF	; 255
 128:	0c 94 b3 00 	jmp	0x166	; 0x166 <__tablejump2__>
			case 0: PORTD=0x3F; break;
 12c:	9b b8       	out	0x0b, r9	; 11
 12e:	c0 e0       	ldi	r28, 0x00	; 0
 130:	d0 e0       	ldi	r29, 0x00	; 0
 132:	13 c0       	rjmp	.+38     	; 0x15a <main+0xb0>
			case 1: PORTD=0x06; break;
 134:	1b b9       	out	0x0b, r17	; 11
 136:	11 c0       	rjmp	.+34     	; 0x15a <main+0xb0>
			case 2: PORTD=0x5B; break;
 138:	0b b9       	out	0x0b, r16	; 11
 13a:	0f c0       	rjmp	.+30     	; 0x15a <main+0xb0>
			case 3: PORTD=0x4F; break;
 13c:	fb b8       	out	0x0b, r15	; 11
 13e:	0d c0       	rjmp	.+26     	; 0x15a <main+0xb0>
			case 4: PORTD=0x66; break;
 140:	eb b8       	out	0x0b, r14	; 11
 142:	0b c0       	rjmp	.+22     	; 0x15a <main+0xb0>
			case 5: PORTD=0x6D; break;
 144:	db b8       	out	0x0b, r13	; 11
 146:	09 c0       	rjmp	.+18     	; 0x15a <main+0xb0>
			case 6: PORTD=0x7D; break;
 148:	cb b8       	out	0x0b, r12	; 11
 14a:	07 c0       	rjmp	.+14     	; 0x15a <main+0xb0>
			case 7: PORTD=0x47; break;
 14c:	bb b8       	out	0x0b, r11	; 11
 14e:	05 c0       	rjmp	.+10     	; 0x15a <main+0xb0>
			case 8: PORTD=0x7F; break;
 150:	ab b8       	out	0x0b, r10	; 11
 152:	03 c0       	rjmp	.+6      	; 0x15a <main+0xb0>
			case 9: PORTD=0x67; break;
 154:	8b b8       	out	0x0b, r8	; 11
 156:	c9 e0       	ldi	r28, 0x09	; 9
 158:	d0 e0       	ldi	r29, 0x00	; 0
		}
		delay_200();
 15a:	0e 94 4a 00 	call	0x94	; 0x94 <delay_200>
	}
 15e:	cd cf       	rjmp	.-102    	; 0xfa <main+0x50>
				cont=0;
			}
			else
			cont++;
		}
		if(down==0x02){
 160:	82 30       	cpi	r24, 0x02	; 2
 162:	21 f7       	brne	.-56     	; 0x12c <main+0x82>
 164:	d8 cf       	rjmp	.-80     	; 0x116 <main+0x6c>

00000166 <__tablejump2__>:
 166:	ee 0f       	add	r30, r30
 168:	ff 1f       	adc	r31, r31
 16a:	05 90       	lpm	r0, Z+
 16c:	f4 91       	lpm	r31, Z
 16e:	e0 2d       	mov	r30, r0
 170:	09 94       	ijmp

00000172 <_exit>:
 172:	f8 94       	cli

00000174 <__stop_program>:
 174:	ff cf       	rjmp	.-2      	; 0x174 <__stop_program>
